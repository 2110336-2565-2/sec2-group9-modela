name: Publish Frontend Docker

on:
  push:
    branches:
      - main
      - beta
      - dev
    paths:
      - 'apps/web/**'
      - 'packages/**'

jobs:
  deploy-docker-frontend:
    strategy:
      matrix:
        node-version: [16.x]
        platform: [ubuntu-latest]
  
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: .turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      # - uses: satackey/action-docker-layer-caching@v0.0.11
      #   name: Docker cache
      #   continue-on-error: true

      - name: Build Frontend Docker
        run: docker build -f apps/web/Dockerfile -t modela-frontend .
      
      - name: Set default env to dev
        run: |
          echo "TAG=dev" >> $GITHUB_ENV
      
      - name: Set beta web env
        if: ${{ github.ref == 'refs/heads/beta' }}
        run: |
          echo "TAG=beta" >> $GITHUB_ENV
      
      - name: Set prod web env
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "TAG=latest" >> $GITHUB_ENV

      - name: Docker login using Github Token
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: miello
          password: ${{ secrets.GHCR_TOKEN }}
      
      - name: Deploy Frontend Docker Image
        run: |
          docker tag modela-frontend ghcr.io/miello/modela-frontend:${{ env.TAG }}
          docker push ghcr.io/miello/modela-frontend:${{ env.TAG }}
    